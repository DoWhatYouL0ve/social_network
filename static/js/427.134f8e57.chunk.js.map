{"version":3,"file":"static/js/427.134f8e57.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social_network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social_network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsForm/AddMyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://social_network/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avaDescriptionWrapper\":\"ProfileInfo_avaDescriptionWrapper__WhcBl\",\"fullName\":\"ProfileInfo_fullName__App6w\",\"profileInfoBackground\":\"ProfileInfo_profileInfoBackground__90ZtQ\",\"profileStatusWrapper\":\"ProfileInfo_profileStatusWrapper__Cwp3P\"};","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport style from './ProfileInfo.module.css'\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus = (props: ProfileStatusPropsType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.profileStatusWrapper}>\r\n            {!editMode && (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || 'no status'}\r\n                    </span>\r\n                </div>\r\n            )}\r\n            {editMode && (\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={status}\r\n                        onBlur={deactivateEditMode}\r\n                        autoFocus={true}\r\n                        onChange={onStatusChange}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport style from './ProfileInfo.module.css'\r\nimport beach from '../../../images/beach.jpg'\r\nimport ava from '../../../images/ava.jpg'\r\nimport { ProfileType } from '../../../redux/profilePageReducer'\r\nimport { PreLoader } from '../../common/PreLoader'\r\nimport { ProfileStatus } from './ProfileStatus'\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    if (!props.profile) {\r\n        return <PreLoader />\r\n    }\r\n    return (\r\n        <div className={style.profileWrapper}>\r\n            <div className={style.profileInfoBackground}>\r\n                <img src={beach} alt=\"\" />\r\n            </div>\r\n            <div className={style.avaDescriptionWrapper}>\r\n                <img\r\n                    src={\r\n                        props.profile.photos.small\r\n                            ? props.profile.photos.small\r\n                            : ava\r\n                    }\r\n                    alt={'no picture'}\r\n                />\r\n                <div className={style.fullName}>{props.profile.fullName}</div>\r\n                <ProfileStatus\r\n                    status={props.status}\r\n                    updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myPostWrapper\":\"MyPosts_myPostWrapper__SKDbq\",\"posts\":\"MyPosts_posts__hrhUY\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__fVFb0\",\"likes\":\"Post_likes__XCNpv\",\"profileMessage\":\"Post_profileMessage__gKRhz\"};","import React from 'react'\r\nimport style from './Post.module.css'\r\nimport ava from '../../../../images/ava.jpg'\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport const Post = (props: PostType) => {\r\n    return (\r\n        <div>\r\n            <div className={style.post}>\r\n                <div>\r\n                    <img src={ava} alt=\"\" />\r\n                </div>\r\n                <div className={style.profileMessage}>{props.message}</div>\r\n                <div className={style.likes}>Likes: {props.likeCount}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport {\r\n    maxLengthCreator,\r\n    required,\r\n} from '../../../../utils/validators/validators'\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls'\r\n\r\nexport type AddMyPostsFormPropsType = {\r\n    newPostText: string\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddMyPostsForm: React.FC<InjectedFormProps<AddMyPostsFormPropsType>> = (\r\n    props\r\n) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={'newPostText'}\r\n                    placeholder={'Enter your message'}\r\n                    cols={40}\r\n                    rows={5}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMyPostsFormReduxForm = reduxForm<AddMyPostsFormPropsType>({\r\n    form: 'addMyPostForm',\r\n})(AddMyPostsForm)\r\n","import React from 'react'\r\nimport style from './MyPosts.module.css'\r\nimport { Post } from './Post/Post'\r\nimport { MyPostsPropsType } from './MyPostsContainer'\r\nimport {\r\n    AddMyPostsFormPropsType,\r\n    AddMyPostsFormReduxForm,\r\n} from './MyPostsForm/AddMyPostsForm'\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n    let postsElements = props.posts.map((p) => (\r\n        <Post\r\n            key={p.id}\r\n            id={p.id}\r\n            message={p.message}\r\n            likeCount={p.likeCount}\r\n        />\r\n    ))\r\n\r\n    const addNewPost = (values: AddMyPostsFormPropsType) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.myPostWrapper}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddMyPostsFormReduxForm onSubmit={addNewPost} />\r\n            </div>\r\n            <div className={style.posts}>{postsElements}</div>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport {\r\n    addPostAC,\r\n    ProfilePagePostsType,\r\n} from '../../../redux/profilePageReducer'\r\nimport { MyPosts } from './MyPosts'\r\nimport { connect } from 'react-redux'\r\nimport { StateType } from '../../../redux/redux-store'\r\nimport { Dispatch } from 'redux'\r\n\r\ntype MapStateToPropsType = ProfilePagePostsType\r\ntype MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MyPosts)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileWrapper\":\"Profile_profileWrapper__L+xkM\"};","import React from 'react'\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo'\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer'\r\nimport { ProfileType } from '../../redux/profilePageReducer'\r\nimport styles from './Profile.module.css'\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport const Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <div className={styles.profileWrapper}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Profile } from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { StateType } from '../../redux/redux-store'\r\nimport {\r\n    getUserProfile,\r\n    ProfileType,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n} from '../../redux/profilePageReducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component<WithRouterPropsType> {\r\n    componentDidMount() {\r\n        let userId: any = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.id\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateUserStatus={this.props.updateUserStatus}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    id: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\ntype ProfileContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype WithRouterPropsType = RouteComponentProps<PathParamsType> &\r\n    ProfileContainerPropsType\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        id: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n// compose import from redux\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n    }),\r\n    withRouter\r\n)(ProfileContainer)\r\n"],"names":["ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","style","onDoubleClick","type","value","onBlur","updateUserStatus","autoFocus","onChange","e","currentTarget","ProfileInfo","profile","src","beach","alt","photos","small","ava","fullName","PreLoader","Post","message","likeCount","maxLength10","maxLengthCreator","AddMyPostsFormReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","cols","rows","validate","required","MyPosts","React","postsElements","posts","map","p","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostAC","Profile","styles","ProfileContainer","userId","this","match","params","history","push","getUserProfile","getUserStatus","compose","auth","isAuth","withRouter"],"sourceRoot":""}