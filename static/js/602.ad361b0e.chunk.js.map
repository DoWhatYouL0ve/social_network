{"version":3,"file":"static/js/602.ad361b0e.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Users/users.module.css?9211","webpack://social_network/./src/components/common/Paginator/paginator.module.css?28dc","components/common/Paginator/pagination.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__WuvuU\",\"userWrapper\":\"users_userWrapper__4kzCr\",\"userContainer\":\"users_userContainer__1sdk7\",\"photo\":\"users_photo__w1BAP\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"paginator_selectedPage__+S4gt\",\"pageNumber\":\"paginator_pageNumber__qBc8S\",\"pagination\":\"paginator_pagination__YrN7l\"};","import style from './paginator.module.css'\r\nimport React, { useState } from 'react'\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    setCurrentPage: (currentPage: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    portionSize: number\r\n}\r\n\r\nexport const Paginator = (props: PropsType) => {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * props.portionSize\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n            <button\r\n                onClick={() => setPortionNumber(portionNumber - 1)}\r\n                disabled={portionNumber === 1}\r\n            >\r\n                prev\r\n            </button>\r\n            {pages\r\n                .filter(\r\n                    (p) =>\r\n                        p >= leftPortionPageNumber &&\r\n                        p <= rightPortionPageNumber\r\n                )\r\n                .map((p) => (\r\n                    <span\r\n                        onClick={() => props.setCurrentPage(p)}\r\n                        className={\r\n                            props.currentPage === p\r\n                                ? `${style.pageNumber} ${style.selectedPage}`\r\n                                : `${style.pageNumber}`\r\n                        }\r\n                        key={p}\r\n                    >\r\n                        {p}\r\n                    </span>\r\n                ))}\r\n            <button\r\n                onClick={() => setPortionNumber(portionNumber + 1)}\r\n                disabled={portionCount === portionNumber}\r\n            >\r\n                next\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport style from './users.module.css'\r\nimport image from './../../images/ava.jpg'\r\nimport { UsersPageType } from '../../redux/usersReducer'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Paginator } from '../common/Paginator/pagination'\r\n\r\nexport type UsersPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: UsersPageType\r\n    setCurrentPage: (currentPage: number) => void\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    toggleFollowingInProgress: (inProgress: boolean, userId: string) => void\r\n    followingInProgress: Array<string>\r\n    followTC: (userId: string) => void\r\n    unfollowTC: (userId: string) => void\r\n}\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    return (\r\n        <div className={style.userWrapper}>\r\n            <Paginator\r\n                currentPage={props.currentPage}\r\n                setCurrentPage={props.setCurrentPage}\r\n                totalItemsCount={props.totalItemsCount}\r\n                pageSize={props.pageSize}\r\n                portionSize={10}\r\n            />\r\n            {props.users.users.map((u) => (\r\n                <div key={u.id} className={style.userContainer}>\r\n                    <span>\r\n                        <div className={style.photo}>\r\n                            <NavLink to={`/profile/${u.id}`}>\r\n                                <img\r\n                                    src={\r\n                                        u.photos.small !== null\r\n                                            ? u.photos.small\r\n                                            : image\r\n                                    }\r\n                                    alt=\"\"\r\n                                    className={style.userPhoto}\r\n                                />\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed ? (\r\n                                <button\r\n                                    disabled={props.followingInProgress.some(\r\n                                        (id) => id === u.id\r\n                                    )}\r\n                                    onClick={() => {\r\n                                        props.unfollowTC(u.id)\r\n                                    }}\r\n                                >\r\n                                    Unfollow\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    disabled={props.followingInProgress.some(\r\n                                        (id) => id === u.id\r\n                                    )}\r\n                                    onClick={() => {\r\n                                        props.followTC(u.id)\r\n                                    }}\r\n                                >\r\n                                    Follow\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div className={style.name}>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { StateType } from './redux-store'\r\nimport { createSelector } from 'reselect'\r\n\r\nexport const getAllUsers = (state: StateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: StateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: StateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: StateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: StateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: StateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n// example of reseletor in work, in this case dependency is getAllUsers and if it change we work with it's return value: users array\r\nexport const getUsersSuper = createSelector(getAllUsers, (users) => {\r\n    return users.filter((u) => true)\r\n})\r\n","import React from 'react'\r\nimport { StateType } from '../../redux/redux-store'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    follow,\r\n    followTC,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    unfollow,\r\n    unfollowTC,\r\n    UsersPageType,\r\n} from '../../redux/usersReducer'\r\nimport { Users } from './Users'\r\nimport { PreLoader } from '../common/PreLoader'\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n} from '../../redux/users-selectors'\r\n\r\nclass UsersContainer extends React.Component<UsersAPIContainerPropsType> {\r\n    constructor(props: UsersAPIContainerPropsType) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onSetCurrentPage = (currentPage: number) => {\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <PreLoader /> : null}\r\n                <Users\r\n                    totalItemsCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    setCurrentPage={this.onSetCurrentPage}\r\n                    unfollow={this.props.unfollow}\r\n                    toggleFollowingInProgress={\r\n                        this.props.toggleFollowingInProgress\r\n                    }\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    followTC={this.props.followTC}\r\n                    unfollowTC={this.props.unfollowTC}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: UsersPageType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<string>\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingInProgress: (inProgress: boolean, userId: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    followTC: (userId: string) => void\r\n    unfollowTC: (userId: string) => void\r\n}\r\n\r\nexport type UsersAPIContainerPropsType = MapStateToPropsType &\r\n    MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage,\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingInProgress,\r\n        getUsers,\r\n        unfollowTC,\r\n        followTC,\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n"],"names":["Paginator","props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","style","onClick","disabled","filter","p","map","setCurrentPage","currentPage","Users","users","u","to","id","src","photos","small","image","alt","followed","followingInProgress","some","unfollowTC","followTC","name","status","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getPageSize","state","usersPage","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","onSetCurrentPage","getUsers","this","PreLoader","follow","unfollow","toggleFollowingInProgress","React","compose","connect","withAuthRedirect"],"sourceRoot":""}